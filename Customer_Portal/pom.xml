<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    
    <groupId>Customer_Portal</groupId>
    <artifactId>customer_portal</artifactId>
    <version>0</version>
    <packaging>war</packaging>
    
    <name>Customer_Portal</name>
	<url>http://maven.apache.org</url>
    
    	<!-- Shared version number properties -->
	<properties>
		<org.springframework.version>3.0.5.RELEASE</org.springframework.version>
	</properties>
	
    <profiles>
      	<profile>
      		<id>local</id>
      		<properties>
        		<ws.location>http\://localhost:8080/ntsouthwest/services/OnlineClaimsService</ws.location>
        		<file.server>C\:\\nettracer_claims_files\\</file.server>
      		</properties>
    	</profile>
      	<profile>
      		<id>hudson</id>
      		<properties>
        		<ws.location>http\://hudson.nettracer.aero/ntsouthwest/services/OnlineClaimsService</ws.location>
        		<file.server>\\\\drad.nettracer.aero\\nettracer_claims_files\\hudson\\</file.server>
      		</properties>
    	</profile>
      	<profile>
      		<id>testing</id>
      		<properties>
        		<ws.location>http\://172.30.68.2:8280/ntsouthwest/services/OnlineClaimsService</ws.location>
        		<file.server>\\\\drad.nettracer.aero\\nettracer_claims_files\\testing\\</file.server>
      		</properties>
    	</profile>
      	<profile>
      		<id>testing2</id>
      		<properties>
        		<ws.location>http\://172.30.68.2:8080/ntsouthwest/services/OnlineClaimsService</ws.location>
        		<file.server>\\\\drad.nettracer.aero\\nettracer_claims_files\\testing2\\</file.server>
      		</properties>
    	</profile>
      	<profile>
      		<id>training</id>
      		<properties>
        		<ws.location>http\://172.30.68.2:8780/ntsouthwest/services/OnlineClaimsService</ws.location>
        		<file.server>\\\\drad.nettracer.aero\\nettracer_claims_files\\training\\</file.server>
      		</properties>
    	</profile>
      	<profile>
      		<id>production</id>
      		<properties>
        		<ws.location>https\://live.nettracer.aero/ntsouthwest/services/OnlineClaimsService</ws.location>
        		<file.server>\\\\file.nettracer.aero\\nettracer_claims_files\\production\\</file.server>
      		</properties>
    	</profile>
    </profiles>

	<build>
		<finalName>customer_portal</finalName>
	    <resources>
	      <resource>
	        <directory>src/main/resources</directory>
	        <filtering>true</filtering>
	      </resource>
	    </resources>
		<plugins>

			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.0.2</version>
				<configuration>
					<target>1.6</target>
					<source>1.6</source>
				</configuration>
			</plugin>
			
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.1.1</version>
				<configuration>
				<!-- Additional Exclude for JBoss 6.0 ",WEB-INF/lib/jsf-impl-1.2_12.jar" -->
					<packagingExcludes>WEB-INF/lib/xmlParserAPIs-2.0.2.jar</packagingExcludes>
					<archive>
		            	<manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
					</archive>
				</configuration>
			</plugin>
			
		      <plugin> 
		        <artifactId>maven-antrun-plugin</artifactId> 
		        <executions> 
		          <execution> 
		            <phase>package</phase> 
		            <configuration> 
		              <tasks> 
		 				<copy todir="C:/jboss-as-7.1.1.Final/standalone/deployments" file="target/customer_portal.war" />
		                <!-- 
		                  Place any Ant task here. You can add anything 
		                  you can add between <target> and </target> in a 
		                  build.xml. 
		                --> 
		 
		              </tasks> 
		            </configuration> 
		            <goals> 
		              <goal>run</goal> 
		            </goals> 
		          </execution> 
		        </executions> 
		      </plugin> 


		</plugins>
	</build>

	<repositories>

		<!-- Repositories: one for Java and another one for JBoss -->
		<repository>
			<id>repository.maven.com</id>
			<url>http://repo1.maven.org/maven2/</url>
		</repository>
		<repository>
			<id>repository.jboss.com</id>
			<url>http://repository.jboss.org/nexus/content/groups/public/</url>
		</repository>

	</repositories>

	<dependencies>
	
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.4</version>
			<scope>provided</scope>
		</dependency>
	
		<!-- Log4j -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.13</version>
		</dependency>

		<!-- JUNIT -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.5</version>
			<scope>test</scope>
		</dependency>

		<!-- JSF Set to scope provided for JBoss 6.0 -->
		<dependency>
			<groupId>javax.faces</groupId>
			<artifactId>jsf-api</artifactId>
			<version>2.0.2-FCS</version>	
		</dependency>

		<dependency>
			<groupId>javax.faces</groupId>
			<artifactId>jsf-impl</artifactId>
			<version>2.0.2-FCS</version>
		</dependency>

		<!-- Facelets -->
		<dependency>
			<groupId>com.sun.facelets</groupId>
			<artifactId>jsf-facelets</artifactId>
			<version>1.1.15.B1</version>
		</dependency>

		<!-- Commons -->
		<dependency>
			<groupId>commons-digester</groupId>
			<artifactId>commons-digester</artifactId>
			<version>2.0</version>
		</dependency>

		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>1.2.2</version>
		</dependency>

		<!-- JSTL Set to scope provided for JBoss 6.0  -->
		<dependency>
			<groupId>jstl</groupId>
			<artifactId>jstl</artifactId>
			<version>1.1.2</version>
		</dependency>

		<!-- Spring -->
		<!-- Core utilities used by other modules. Define this if you use Spring 
			Utility APIs (org.springframework.core.*/org.springframework.util.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- Expression Language (depends on spring-core) Define this if you use 
			Spring Expression APIs (org.springframework.expression.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-expression</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- Bean Factory and JavaBeans utilities (depends on spring-core) Define 
			this if you use Spring Bean APIs (org.springframework.beans.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- Aspect Oriented Programming (AOP) Framework (depends on spring-core, 
			spring-beans) Define this if you use Spring AOP APIs (org.springframework.aop.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- Application Context (depends on spring-core, spring-expression, spring-aop, 
			spring-beans) This is the central artifact for Spring's Dependency Injection 
			Container and is generally always defined -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- Various Application Context utilities, including EhCache, JavaMail, 
			Quartz, and Freemarker integration Define this if you need any of these integrations -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- Transaction Management Abstraction (depends on spring-core, spring-beans, 
			spring-aop, spring-context) Define this if you use Spring Transactions or 
			DAO Exception Hierarchy (org.springframework.transaction.*/org.springframework.dao.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- JDBC Data Access Library (depends on spring-core, spring-beans, spring-context, 
			spring-tx) Define this if you use Spring's JdbcTemplate API (org.springframework.jdbc.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- Object-to-Relation-Mapping (ORM) integration with Hibernate, JPA, 
			and iBatis. (depends on spring-core, spring-beans, spring-context, spring-tx) 
			Define this if you need ORM (org.springframework.orm.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- Object-to-XML Mapping (OXM) abstraction and integration with JAXB, 
			JiBX, Castor, XStream, and XML Beans. (depends on spring-core, spring-beans, 
			spring-context) Define this if you need OXM (org.springframework.oxm.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-oxm</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- Web application development utilities applicable to both Servlet and 
			Portlet Environments (depends on spring-core, spring-beans, spring-context) 
			Define this if you use Spring MVC, or wish to use Struts, JSF, or another 
			web framework with Spring (org.springframework.web.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- Spring MVC for Servlet Environments (depends on spring-core, spring-beans, 
			spring-context, spring-web) Define this if you use Spring MVC with a Servlet 
			Container such as Apache Tomcat (org.springframework.web.servlet.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- Spring MVC for Portlet Environments (depends on spring-core, spring-beans, 
			spring-context, spring-web) Define this if you use Spring MVC with a Portlet 
			Container (org.springframework.web.portlet.*) -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc-portlet</artifactId>
			<version>${org.springframework.version}</version>
		</dependency>

		<!-- Tomahawk -->
		<dependency>
			<groupId>org.apache.myfaces.tomahawk</groupId>
			<artifactId>tomahawk</artifactId>
			<version>1.1.8</version>
		</dependency>

		<!-- Richfaces -->
		<dependency>
			<groupId>org.richfaces.framework</groupId>
			<artifactId>richfaces-impl-jsf2</artifactId>
			<version>3.3.3.Final</version>
		</dependency>
		<dependency>
			<groupId>org.richfaces.ui</groupId>
			<artifactId>richfaces-ui</artifactId>
			<version>3.3.3.Final</version>
		</dependency>
	
		<!-- 
		SPECIAL NOTES:
		To install client JAR:
		 	mvn install:install-file -DgroupId=OnlineClaimsService-client -DartifactId=OnlineClaimsService-client -Dversion=1.0 -Dpackaging=jar -Dfile=c:/workspace/onlineclaims/OnlineClaimsService-client.jar 
		 
		To initially build, 
		1.  uncomment the Axis libraries, 
		2.  then do a package install to download the libraries
		3.  then recomment, then package install again.
		
		 -->
		
		<dependency>
			<groupId>OnlineClaimsService-client</groupId>
			<artifactId>OnlineClaimsService-client</artifactId>
			<version>1.0</version>
			<scope>provided</scope>
		</dependency>
<!-- 		<dependency>
   			<groupId>org.apache.axis2</groupId>
			<artifactId>axis2-parent</artifactId>
			<version>1.5.1</version>
		</dependency>
		<dependency>
   			<groupId>org.apache.axis2.distribution</groupId>
			<artifactId>axis2</artifactId>
			<version>1.5.1</version>
		</dependency>
		  -->
		<!-- Web Service Integration-->
 <!-- 		<dependency>
			<groupId>org.apache.axis2</groupId>
			<artifactId>axis2</artifactId>
			<version>1.5.1</version>
		</dependency>
		  -->
	 	<dependency>
			<groupId>org.apache.xmlbeans</groupId>
			<artifactId>xmlbeans</artifactId>
			<version>2.4.0</version>
			<scope>provided</scope>
		</dependency> 

    	<dependency>
        	<groupId>org.apache.axis2</groupId>
        	<artifactId>axis2-kernel</artifactId>
        	<version>1.5</version>
			<scope>provided</scope>
    	</dependency>

	</dependencies>
    
</project>